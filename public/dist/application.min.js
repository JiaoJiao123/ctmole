"use strict";var ApplicationConfiguration=function(){var applicationModuleName="clinicaltrials",applicationModuleVendorDependencies=["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("alterations"),ApplicationConfiguration.registerModule("cancertypes"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("drugs"),ApplicationConfiguration.registerModule("genes"),ApplicationConfiguration.registerModule("mappings"),ApplicationConfiguration.registerModule("trials"),ApplicationConfiguration.registerModule("users"),angular.module("alterations").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Alterations","alterations","dropdown","/alterations(/create)?"),Menus.addSubMenuItem("topbar","alterations","List Alterations","alterations")}]),angular.module("alterations").config(["$stateProvider",function($stateProvider){$stateProvider.state("listAlterations",{url:"/alterations",templateUrl:"modules/alterations/views/list-alterations.client.view.html"}).state("createAlteration",{url:"/alterations/create",templateUrl:"modules/alterations/views/create-alteration.client.view.html"}).state("viewAlteration",{url:"/alterations/:alterationId",templateUrl:"modules/alterations/views/view-alteration.client.view.html"}).state("editAlteration",{url:"/alterations/:alterationId/edit",templateUrl:"modules/alterations/views/edit-alteration.client.view.html"})}]),angular.module("alterations").controller("AlterationsController",["$scope","$stateParams","$location","Authentication","Alterations",function($scope,$stateParams,$location,Authentication,Alterations){$scope.authentication=Authentication,$scope.create=function(){var alteration=new Alterations({name:this.name});alteration.$save(function(response){$location.path("alterations/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(alteration){if(alteration){alteration.$remove();for(var i in $scope.alterations)$scope.alterations[i]===alteration&&$scope.alterations.splice(i,1)}else $scope.alteration.$remove(function(){$location.path("alterations")})},$scope.update=function(){var alteration=$scope.alteration;alteration.$update(function(){$location.path("alterations/"+alteration._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.alterations=Alterations.query()},$scope.findOne=function(){$scope.alteration=Alterations.get({alterationId:$stateParams.alterationId})}}]),angular.module("alterations").factory("Alterations",["$resource",function($resource){return $resource("alterations/:alterationId",{alterationId:"@_id"},{update:{method:"PUT"}})}]),angular.module("cancertypes").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Cancer Types","cancertypes","dropdown","/cancertypes(/create)?"),Menus.addSubMenuItem("topbar","cancertypes","List Cancer Types","cancertypes")}]),angular.module("cancertypes").config(["$stateProvider",function($stateProvider){$stateProvider.state("listCancertypes",{url:"/cancertypes",templateUrl:"modules/cancertypes/views/list-cancertypes.client.view.html"}).state("createCancertype",{url:"/cancertypes/create",templateUrl:"modules/cancertypes/views/create-cancertype.client.view.html"}).state("viewCancertype",{url:"/cancertypes/:cancertypeId",templateUrl:"modules/cancertypes/views/view-cancertype.client.view.html"}).state("editCancertype",{url:"/cancertypes/:cancertypeId/edit",templateUrl:"modules/cancertypes/views/edit-cancertype.client.view.html"})}]),angular.module("cancertypes").controller("CancertypesController",["$scope","$stateParams","$location","Authentication","Cancertypes",function($scope,$stateParams,$location,Authentication,Cancertypes){$scope.authentication=Authentication,$scope.create=function(){var cancertype=new Cancertypes({name:this.name});cancertype.$save(function(response){$location.path("cancertypes/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(cancertype){if(cancertype){cancertype.$remove();for(var i in $scope.cancertypes)$scope.cancertypes[i]===cancertype&&$scope.cancertypes.splice(i,1)}else $scope.cancertype.$remove(function(){$location.path("cancertypes")})},$scope.update=function(){var cancertype=$scope.cancertype;cancertype.$update(function(){$location.path("cancertypes/"+cancertype._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.cancertypes=Cancertypes.query()},$scope.findOne=function(){$scope.cancertype=Cancertypes.get({cancertypeId:$stateParams.cancertypeId})},$scope.trial=function(trialId){$location.open("#!/trials/"+trialId)}}]),angular.module("cancertypes").factory("Cancertypes",["$resource",function($resource){return $resource("cancertypes/:cancertypeId",{cancertypeId:"@_id"},{update:{method:"PUT"}})}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("drugs").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Drugs","drugs","dropdown","/drugs(/create)?"),Menus.addSubMenuItem("topbar","drugs","List Drugs","drugs")}]),angular.module("drugs").config(["$stateProvider",function($stateProvider){$stateProvider.state("listDrugs",{url:"/drugs",templateUrl:"modules/drugs/views/list-drugs.client.view.html"}).state("createDrug",{url:"/drugs/create",templateUrl:"modules/drugs/views/create-drug.client.view.html"}).state("viewDrug",{url:"/drugs/:drugId",templateUrl:"modules/drugs/views/view-drug.client.view.html"}).state("editDrug",{url:"/drugs/:drugId/edit",templateUrl:"modules/drugs/views/edit-drug.client.view.html"})}]),angular.module("drugs").controller("DrugsController",["$scope","$stateParams","$location","Authentication","Drugs",function($scope,$stateParams,$location,Authentication,Drugs){$scope.authentication=Authentication,$scope.create=function(){var drug=new Drugs({name:this.name});drug.$save(function(response){$location.path("drugs/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(drug){if(drug){drug.$remove();for(var i in $scope.drugs)$scope.drugs[i]===drug&&$scope.drugs.splice(i,1)}else $scope.drug.$remove(function(){$location.path("drugs")})},$scope.update=function(){var drug=$scope.drug;drug.$update(function(){$location.path("drugs/"+drug._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.drugs=Drugs.regular.query()},$scope.findOne=function(){$scope.drug=Drugs.regular.get({drugId:$stateParams.drugId})}}]),angular.module("drugs").factory("Drugs",["$resource",function($resource){return{full:$resource("drugs/full",{},{update:{method:"PUT"}}),regular:$resource("drugs/:drugId",{drugId:"@_id"},{update:{method:"PUT"}})}}]),angular.module("genes").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Genes","genes","dropdown","/genes(/create)?"),Menus.addSubMenuItem("topbar","genes","List Genes","genes")}]),angular.module("genes").config(["$stateProvider",function($stateProvider){$stateProvider.state("listGenes",{url:"/genes",templateUrl:"modules/genes/views/list-genes.client.view.html"}).state("createGene",{url:"/genes/create",templateUrl:"modules/genes/views/create-gene.client.view.html"}).state("viewGene",{url:"/genes/:geneId",templateUrl:"modules/genes/views/view-gene.client.view.html"}).state("editGene",{url:"/genes/:geneId/edit",templateUrl:"modules/genes/views/edit-gene.client.view.html"})}]),angular.module("genes").controller("GenesController",["$scope","$stateParams","$location","Authentication","Genes",function($scope,$stateParams,$location,Authentication,Genes){$scope.authentication=Authentication,$scope.create=function(){var gene=new Genes({name:this.name});gene.$save(function(response){$location.path("genes/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(gene){if(gene){gene.$remove();for(var i in $scope.genes)$scope.genes[i]===gene&&$scope.genes.splice(i,1)}else $scope.gene.$remove(function(){$location.path("genes")})},$scope.update=function(){var gene=$scope.gene;gene.$update(function(){$location.path("genes/"+gene._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.genes=Genes.query()},$scope.findOne=function(){$scope.gene=Genes.get({geneId:$stateParams.geneId})}}]),angular.module("genes").filter("asc",[function(){return function(input){return"asc filter: "+input}}]),angular.module("genes").factory("Genes",["$resource",function($resource){return $resource("genes/:geneId",{geneId:"@_id"},{update:{method:"PUT"}})}]),angular.module("mappings").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Mappings","mappings","item","/mappings",!0,["*"],-1)}]),angular.module("mappings",["localytics.directives"]).config(["$stateProvider",function($stateProvider){$stateProvider.state("mapping",{url:"/mappings",controller:"MappingsController",templateUrl:"modules/mappings/views/search-mappings.client.view.html"})}]),angular.module("mappings").controller("MappingsController",["$scope","$stateParams","$location","Authentication","Mappings","Genes","Alterations","Cancertypes","Drugs",function($scope,$stateParams,$location,Authentication,Mappings,Genes,Alterations,CancerTypes,Drugs){function geneList(){$scope.genes=Genes.query()}function altList(){$scope.alts=Alterations.query()}function cancerTypeList(){$scope.cancerTypes=CancerTypes.query()}function drugList(){$scope.drugs=Drugs.full.query()}$scope.authentication=Authentication,console.log("can print something"),$scope.init=function(){geneList(),altList(),cancerTypeList(),drugList(),console.log($scope)},$scope.find=function(){$scope.mappings=Mappings.query()}}]),angular.module("mappings").factory("Mappings",["$resource",function($resource){return $resource("mappings/:mappingId",{mappingId:"@_id"},{update:{method:"PUT"}})}]),angular.module("trials").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Trials","trials","dropdown","/trials(/create)?"),Menus.addSubMenuItem("topbar","trials","List Trials","trials"),Menus.addSubMenuItem("topbar","trials","Search Trial","trials/search")}]),angular.module("trials").config(["$stateProvider",function($stateProvider){$stateProvider.state("listTrials",{url:"/trials",templateUrl:"modules/trials/views/list-trials.client.view.html"}).state("createTrial",{url:"/trials/create",templateUrl:"modules/trials/views/create-trial.client.view.html"}).state("searchTrial",{url:"/trials/search",templateUrl:"modules/trials/views/search-trial.client.view.html"}).state("searchByKeyword",{url:"/trials/search/:keyword",templateUrl:"modules/trials/views/search-trial.client.view.html"}).state("viewTrial",{url:"/trials/:nctId",templateUrl:"modules/trials/views/view-trial.client.view.html"}).state("editTrial",{url:"/trials/:nctId/edit",templateUrl:"modules/trials/views/edit-trial.client.view.html"})}]),angular.module("trials").controller("TrialsController",["$scope","$stateParams","$location","Authentication","Trials",function($scope,$stateParams,$location,Authentication,Trials){$scope.authentication=Authentication,$scope.nctId="",$scope.create=function(){var trial=new Trials({nctId:this.name});trial.$save(function(response){$location.path("trials/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(trial){if(trial){trial.$remove();for(var i in $scope.trials)$scope.trials[i]===trial&&$scope.trials.splice(i,1)}else $scope.trial.$remove(function(){$location.path("trials")})},$scope.update=function(){var trial=$scope.trial;trial.$update(function(){$location.path("trials/"+trial.nctId)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.trials=Trials.nctId.query()},$scope.findOne=function(){$scope.trial=Trials.nctId.get({nctId:$stateParams.nctId})},$scope.searchByKeyword=function(){$scope.trials=Trials.keyword.query({keyword:$scope.keyword}),console.log($scope.trials)},$scope.searchTrailBynctId=function(){$location.path("trials/"+$scope.nctId)},$scope.getDrugs=function(drugs){return drugs.map(function(e){return e.drugName}).join(", ")}}]),angular.module("trials").factory("Trials",["$resource",function($resource){return{nctId:$resource("trials/:nctId",{nctId:"@_id"},{update:{method:"PUT"}}),keyword:$resource("trials/search/:keyword",{keyword:"@_id"})}}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invlaid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http.delete("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);